#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { exec } = require('child_process');


exec(`git diff --name-only --cached | grep .js`, (err, stdout) => {
  if (err) console.error(err);
  const modifiedFile = /(\d+)\.js/gm.exec(stdout)?.[1];
  generateDocument(modifiedFile);
});

async function generateDocument(modifiedFile) {
  console.info('Generating index.js...');

  let document = `${executeFunction()}console.time('npm');\n\n`;
  const fileNames = getFileNames();
  for (const exercice of fileNames) {
    if (modifiedFile == exercice || await checkExercice(exercice)) {
      document += `import {ex${exercice}} from './problems/${exercice}.js';\nrunExercice('ex${exercice}', ex${exercice});\n\n`;
    }

  }
  document += `console.log('------------------\\n');\nconsole.timeEnd('npm');`
  fs.writeFileSync(path.join(__dirname, '..', '..', 'js', 'index.js'), document, { encoding: 'utf-8' });


  exec('git add **/index.js', (err) => {
    if (err) {
      console.error(err);
    } else {
      console.info('index.js generated successfully!');
    }
  });
}

async function checkExercice(number) {
  const res = await fetch(`https://raw.githubusercontent.com/arialdev/Project-Euler/main/js/problems/${number}.js`)
  console.log(res.status, res.status === 200)
  return res.status === 200;
}

function getFileNames() {
  return fs
    .readdirSync(path.join(__dirname, '..', '..', 'js', 'problems'))
    .map(f => +f.match(/\d+/)[0])
    .sort((a, b) => a - b);
}

function executeFunction() {
  return `function runExercice(label, fn) {\n\tconsole.time(label);\n\tconst exResult = fn();\n\tconsole.timeEnd(label);\n\tconsole.log(label, exResult);\n}\n\n`;
}